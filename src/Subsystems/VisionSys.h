// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef VISIONSYS_H
#define VISIONSYS_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "math.h"
//#include "Vision/AxisCamera.h"
//#include "Vision/BinaryImage.h"
//#include "Vision/RGBImage.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class VisionSys: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	//AxisCamera * camera;

	float shooterInchesXoffset, shooterInchesYoffset, TARGETHT;

	bool VTestFlag, VTestBall;
	float VTestMinX, VTestMinY, VTestMaxX, VTestMaxY, VTestDist, VTestRun, VTestAngle, VTestHdg;
	int displayMode;

	typedef struct TestPrefs{
		bool VTestFlag, VTestBall;
		float VTestMinX, VTestMinY, VTestMaxX, VTestMaxY, VTestDist, VTestRun, VTestAngle, VTestHdg;
	} TestPref;


	TestPref testData;

	typedef struct ImageSpecs{
		float imageWidth, imageHeight, imageFOV;
	} ImageSpec;

    ImageSpec cameraSpec;


public:

	VisionSys();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// The following methods are called from Robot.ccp on startup & VisionOffsetResetCmd.cpp
	void SetOffsets(float shooterInchesXoffset, float shooterInchesYoffset, float TARGETHT);
	void SetCameraDefaults(float imageWidth, float imageHeight, float imageFOV);
	void SetVisionTestDefaults(bool flag, bool ball, float dist, float run, float xmax, float xmin, float ymax, float ymin, float Angle, float Hdg);

	// ------ Camera Image Capture --------------------------------------
	void CameraTest();

	// ------ Called by ProcessVisionDataCmd.cpp -------------------------
	VisionSys::ImageSpec GetCameraSpecs();
	float GetImageWidth();
	float GetImageHeight();
	float GetImageFOV();
	float GetImageshooterInchesXoffset();
	float GetImageshooterInchesYoffset();
	float GetTARGETHT();
	void ToggleDisplayMode();
	int GetDisplayMode();
	void SetDisplayMode(int mode);

	bool GetTestFlag();
	bool GetTestBall();
	float GetTestMinX();
	float GetTestMinY();
	float GetTestMaxX();
	float GetTestMaxY();
	float GetTestDist();
	float GetTestRun();
	float GetTestAngle();
	float GetTestHdg();

};

#endif
