// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef _ROBOT_H
#define _ROBOT_H

#include "WPILib.h"
#include "Commands/Command.h"
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Subsystems/Drivetrain.h"
#include "Subsystems/LEDRingSys.h"
#include "Subsystems/LiftSys.h"
#include "Subsystems/ShooterSys.h"
#include "Subsystems/Smartdash.h"
#include "Subsystems/VisionSys.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "OI.h"
#include "SmartDashboard/SendableChooser.h"


class Robot : public IterativeRobot {
public:
	// ----------------- User added items ----------------

	std::unique_ptr<frc::Command> autoCmd;
    frc::SendableChooser<frc::Command*> autoChooser;

    // --------------------------- NetTable Preferences ------------------------------------
    std::shared_ptr<NetworkTable> netTable;						// Pointer for accessing the NetworkTables

    int kDefaultDisplayMode = 1;								// 0= None, 1=Vision Distance, 2=Prox Distance

    float imageWidth = 640;										// Default if nothing in NetTable/Preferences
    float imageHeight = 480;
	float imageFOV = 65.43;										// Camera Field of view
	float shooterInchesXoffset = 8.6;							// Inches the center of camera is off shooter ctr X
	float shooterInchesYoffset = -5;							// Inches the center of camera is off shooter ctr Y
	float TARGETHT = 93;										// target ctr is 94 inches above floor

	// ---- Vision Test Data Defaults ----
	float VTestMinX = 248;
	float VTestMinY = 161;
	float VTestMaxX = 390;
	float VTestMaxY = 261;
	float VTestDist = 130.16;
	float VTestRun = 109.5;
	float VTestAngle = 49.4;
	float VTestHdg = 0;
	bool VTestBall = true;
	bool VTestFlag = false;

	// -------- POT defaults for Angle Constants --------
	float kPotOffset = 1.482;					//	Sets the zero angle point on pot based on how installed (Pot = 0-1)
	float kPotScale = 0.026974;					// Pot range = 0-1 this converts pot reading to degrees

	const float DEGREETORADIANCONST = 0.0174533;				// Degrees * Constant = Radians
	const float RADIANSTODEGREECONST = 57.295791;				// Constant / Radians = Degrees
    // ---------------------------------------------------

	//std::unique_ptr<frc::Command> autonomousCommand;

	static std::unique_ptr<OI> oi;
	LiveWindow *lw = LiveWindow::GetInstance();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    static std::shared_ptr<Drivetrain> drivetrain;
    static std::shared_ptr<LiftSys> liftSys;
    static std::shared_ptr<ShooterSys> shooterSys;
    static std::shared_ptr<VisionSys> visionSys;
    static std::shared_ptr<LEDRingSys> lEDRingSys;
    static std::shared_ptr<Smartdash> smartdash;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	virtual void RobotInit();
	virtual void DisabledInit();
	virtual void DisabledPeriodic();
	virtual void AutonomousInit();
	virtual void AutonomousPeriodic();
	virtual void TeleopInit();
	virtual void TeleopPeriodic();
	virtual void TestPeriodic();

	void UserInit();
};
#endif
