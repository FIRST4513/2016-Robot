// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveByJoystickArcade.h"
#include "../Robot.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

DriveByJoystickArcade::DriveByJoystickArcade(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void DriveByJoystickArcade::Initialize() {
	Robot::drivetrain->ResetEncoders();
	Robot::drivetrain->ZeroBeginEndValues();
	Robot::drivetrain->PostBeginValues();
}

// Called repeatedly when this Command is scheduled to run
void DriveByJoystickArcade::Execute() {
	Robot::drivetrain->DriveByJoystickArcade(Robot::oi->getDriverJoystick());
	Robot::drivetrain->PostCurrValues();
	Robot::drivetrain->DisplaySmartdashValues();
	// ------------ Calibration data display ----------------------------
	if (Robot::oi->getDriverJoystick()->GetRawButton(kPrintBtn) == true){
		printf(" Gyro-Hdg=%5.2f   Left-Enc=%5.0f   Right-Enc=%5.0f \n",
				Robot::drivetrain->GetHeadingByGyro(),
				Robot::drivetrain->GetLeftEncoder(),
				Robot::drivetrain->GetRightEncoder());
	}
}

// Make this return true when this Command no longer needs to run execute()
bool DriveByJoystickArcade::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void DriveByJoystickArcade::End() {


}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveByJoystickArcade::Interrupted() {
	End();
}
