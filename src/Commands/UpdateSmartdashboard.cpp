// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "UpdateSmartdashboard.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

UpdateSmartdashboard::UpdateSmartdashboard(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::smartdash.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void UpdateSmartdashboard::Initialize() {
	netTable = NetworkTable::GetTable("Preferences");
	// DispTmr.Reset();
	// DispTmr.Start();
}

// Called repeatedly when this Command is scheduled to run
void UpdateSmartdashboard::Execute() {

	// Perform display refresh every 1/10th of a second. his cuts down on CPU util (maybe ??)
//	if(DispTmr.Get() < 0.1)
//		return;
//	else
//		DispTmr.Reset();	// reset back to zero  ----- and then refresh display

	// ----------------- Drivetrain -----------------
	if (netTable->GetNumber("DispDrivetrain", 0.0) > 0)
		Robot::drivetrain->DisplaySmartdashValues();
	else
		Robot::drivetrain->DisplaySmartdashSimple();

	// ----------------- Lift -----------------
	if (netTable->GetNumber("DispLift", 0.0) > 0)
		Robot::liftSys->DisplaySmartdashValues();
	else
		Robot::liftSys->DisplaySmartdashSimple();


	// ----------------- Shooter -----------------
		Robot::shooterSys->DisplaySmartdashValues();

	// ----------------- Vision -----------------
//	if (netTable->GetNumber("DispDrivetrain", 0.0) > 0)
//		Robot::visionSys->DisplaySmartdashValues();
//	else
//		Robot::visionSys->DisplaySmartdashSimple();
}


// Make this return true when this Command no longer needs to run execute()
bool UpdateSmartdashboard::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void UpdateSmartdashboard::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void UpdateSmartdashboard::Interrupted() {
	End();
}
