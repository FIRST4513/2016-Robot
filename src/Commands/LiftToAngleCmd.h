// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef LIFTTOANGLECMD_H
#define LIFTTOANGLECMD_H


#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class LiftToAngleCmd: public Command {
public:
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	LiftToAngleCmd(double angle, int mode);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();

private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES

    double m_angle;
    int m_mode;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES

    const float ANGLEFAST = 5;			// If angle difference greater that this use fast speed
    const float ANGLEMED = 3;			// If angle difference greater that this use fast med
    const float ANGLESLOW = 1.5;			// If angle difference greater that this use fast speed

    int directionFlag;
    float currAngle, finalAngle;
	std::shared_ptr<NetworkTable> netTable;							// NetTables to talk to RoboRealm
	std::vector<std::string> keys;

    float GetAutoAimAngle();
	float Round(float value, int digits);
};

#endif
