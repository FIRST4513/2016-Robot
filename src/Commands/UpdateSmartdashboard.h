// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef UPDATESMARTDASHBOARD_H
#define UPDATESMARTDASHBOARD_H


#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class UpdateSmartdashboard: public Command {
public:
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	UpdateSmartdashboard();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();

	float ConvertImagePosToAngle(float pos, float ctr);

private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES

	Timer DispTmr;

	std::shared_ptr<NetworkTable> netTable;
	std::vector<std::string> keys;

	float angle, rise, run;		// used for distance to Target calculation
	const float imageXctr = 160;
	const float imageYctr = 120;
	const float ServoAngleCoversionFactor = 0.006108;		// servo moves 180 degrees in 0.0 to 1.0
	const float ImageAngleConversionFactor = 0.200543;		// Degrees per pixel

	float targetMinX, targetMaxX, targetMinY, targetMaxY;
	float currentPanServoPosition,currentTiltServoPosition;
	float currentPanAngle, currentTiltAngle;
	float xOffset, yOffset, servoXangle, servoYangle;
	float currentXpos, currentYpos;

	float targetXctrAngle, targetYctrAngle;
	float targetXpos, targetYpos;
	float targetXangle, targetYangle;
	float targetXctrPos, targetYctrPos;
	float targetXmin, targetXmax, targetYmin, targetYmax;
	float targetAdjXctrAngle, targetAdjYctrAngle;
	float targetImageXangle, targetImageYangle;
};

#endif
